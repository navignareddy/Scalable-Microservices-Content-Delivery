server:
  port: 8081

spring:
  application:
    name: content-service

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:5432/content_service_db
    username: content_user
    password: content_pass
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.cdn.content: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

aws:
  s3:
    bucket-name: ${AWS_S3_BUCKET:cdn-content-bucket}
    region: ${AWS_REGION:us-east-1}
    access-key: ${AWS_ACCESS_KEY:}
    secret-key: ${AWS_SECRET_KEY:}

jwt:
  secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
  expiration: 86400000

content:
  storage:
    type: ${STORAGE_TYPE:local} # local or s3
    local-path: ${LOCAL_STORAGE_PATH:/tmp/cdn-content}
  cache:
    ttl: 3600 # Cache TTL in seconds 